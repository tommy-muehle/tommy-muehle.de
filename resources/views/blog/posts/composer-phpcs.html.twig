<p>Mittlerweile ist es die Regel seine PHP-Projekte mit
   <a href="https://github.com/squizlabs/PHP_CodeSniffer" target="_blank" title="PHP_CodeSniffer Website">PHPCS</a>
   auf den jeweiligen zu verwendenden Coding-Standard zu prüfen.</p>

<p>In Symfony2 Projekten bspw. mit Hilfe von
   <a href="https://github.com/lapistano/Symfony2-coding-standard" target="_blank">lapistano's Symfony2 Coding-Standard</a>
   oder aber auch gegen eigene vorab im Team festgelegte Coding Guidelines.</p>

<p>Installiert man PHPCS jedoch via Composer erhält man nur die bereits integrierten
   <a target="_blank" title="Standards" href="https://github.com/squizlabs/PHP_CodeSniffer/tree/master/CodeSniffer/Standards">Standards</a>
</p>

<p>Um jetzt seine eigenen Standards/Styles zu hinterlegen und diese im Projekt nutzen zu können, verwende ich
   <a target="_blank" title="Composer scripts" href="https://getcomposer.org/doc/articles/scripts.md">Composer-Hooks bzw. Scripts</a>.
</p>

<p>Hierbei nutze ich Callbacks, welche nach jedem "update" oder "install" Command aufgerufen werden:</p>
<pre><code class="json">
{
    &quot;require-dev&quot;: {
        &quot;squizlabs/php_codesniffer&quot;: &quot;1.5.4&quot;
    },
    &quot;scripts&quot;: {
        &quot;post-update-cmd&quot;: &quot;TM\\MyClass::postUpdate&quot;,
        &quot;post-install-cmd&quot;: &quot;TM\\MyClass::postInstall&quot;
    },
    ...
}
</code></pre>

<br />

<p>In der aufgerufenen PHP-Klasse installiere ich den erforderlichen Standard dann mithilfe von
   Composer's Zip-Downloader im richtigen Verzeichnis.</p>

<p>Den Code dazu findet ihr im entsprechenden
   <a target="_blank" title="Gist" href="https://gist.github.com/tommy-muehle/d1bc9b9a5115da4c0a67">Gist</a>
   auf Github.
</p>

<p>Danach könnt ihr euren projekt-spezifischen Code bspw. wie folgt testen:</p>
<pre><code class="bash">./vendor/bin/phpcs --standard=Symfony2 --extensions=php src</code></pre>

<h3>Tipp</h3>

<p>Das Ganze hat natürlich noch einen riesen Vorteil. Nutze ich ein Integrationssystem
   wie bspw. Hudson oder Jenkins muss ich auf diesen nicht mehr alle möglichen Standards zentral hinterlegen,
   sondern verlagere dies in die jeweiligen Projekte.
</p>